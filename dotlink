#!/bin/sh
# #######
# Create relative symbolic links from the files in the repository in
# the current directory to home directory.
#
# NOTE: repository outside of home directory is possible but not
# supported.
# #######

set -Eeu

ovw=""
if [ x"${1:-}" = x"-f" ]; then
    echo "Force-pre-remove."
    ovw="."
fi


unpath() {
    # Make a "return" path for the specified filename,
    # e.g. "a/b/c/filename" -> "../../../filename"

    # cd "$1/$(unpath "$1")" -> same directory
    filename="$1"
    # filename="$(dirname "$1")"
    echo "$filename" | sed -r '
        s,/?$,/,;  # ensure terminating slash
        s,^\./,,;  # remove leading extraneous curdir "./"
        s,[^/]+/,../,g;  # e.g. "a/b/c/" -> "../../../"
    '
}

# The repository is supposed to be in the current dir
repodir="$(dirname "$(readlink -e "$0")")"
repodir="$repodir/homedir/"
home="$HOME/"
reporel="$(echo "$repodir" | sed -rn "s!^$home/*!! p")"
if [ -z "$reporel" ]; then
    echo "repodir '$repodir' is not under home '$home'. Aborting."
    exit 1
fi
echo "Assuming the repo homedir is in ~/${reporel}"

list_repo_files() {
    (
        cd "$repodir"
        git ls-tree -r --name-only HEAD .
    )
}

cd "$home"
list_repo_files | while read -r filename; do
    # filename is repo-relative, curdir is home
    filedir="$(dirname "$filename")"
    mkdir -pv "$filedir"
    if [ $ovw ]; then
        if [ -e "$filename" ]; then
            mv "$filename" "${filename}._0dotlink.bk"
            # rm -v "$filename"
        fi  # | 2>&1 | grep -v "No such file or directory$"
    fi
    target="$(unpath "$filedir")${reporel}${filename}"
    # echo "link $filename -> $target = filedir=$filedir, unpath=$(unpath "$filedir"), reporel=$reporel, filename=$filename" >&2
    # NOTE: all (directory) paths are supposed to end in slash
    if [ -L "$filename" ]; then
        current_target="$(readlink "$filename")"
        if [ x"$current_target" = x"$target" ]; then
            # Already linked where it should be
            continue
        fi
    fi
    ln -v -s "$target" "$filename"
done
