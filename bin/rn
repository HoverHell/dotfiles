#!/bin/sh
## A helper for easy file renaming.
## If you know a better way - do tell.
## 3 modes of operation: print, wait, do (default); do (`-f`); print (`-n`)
## TODO: allow disabling `-v` on all commands.


tmp1="$(mktemp)"
tmp2="$(mktemp)"

## Supposedly, files are already there, empty and with correct permissions
#touch "$tmp1" "$tmp2"
#chmod 600 "$tmp1" "$tmp2"

# NOTE: bit too simple parser; requires particular order.
noaction=
if [ x"$1" = x"-n" ]; then
    noaction=1
    shift 1
fi
noask=
if [ x"$1" = x"-f" ]; then
    noask=1
    shift 1
fi

# Overridability over env.
[ -z "$RN_CMD" ] && RN_CMD="mv -v"
[ -z "$RN_RM_CMD" ] && RN_RM_CMD="rm -v"

if [ $# -ne 0 ]; then
  for arg in "$@"; do
    echo "$arg" >> "$tmp1"
  done
else
  ## Else we expect a filelist on stdin.
  cat > "$tmp1"
fi

cat "$tmp1" > "$tmp2"
sensible-editor "$tmp2"
res=$?
[ $res -ne 0 ] && {
    echo "Non-zero editor exit status. Doing nothing."
    exit $res
}


shescape0(){ printf "'"; sed "s,','\\\\'',g"; printf "'"; }
shescape(){ for i in "$@"; do printf "'"; printf "%s" "$i" | sed "s,','\\\\'',g"; printf "' "; done; printf "\n"; }


steps="1 2"; dowait=1;
[ $noaction ] && { steps="1"; dowait=; }
[ $noask ] && steps="2"
for step in $steps; do
#ar=""; [ $step -eq 1 ] && ar="-n"
[ $step -eq 1 ] && noaction=1
[ $step -eq 2 ] && noaction=
anything=

#exec 7<"$tmp1"  # read from directly.
exec 8<"$tmp2"

while read frm; do
   read tof <&8
   ## Note: `-z "$frm"`?  Will it be okay in all cases?
   [ -z "$frm" ] && {
     echo "W: empty filename in input." 1>&2
     continue
   }
   #echo "D: step $step; from $frm; to $tof; noact $noaction;"
   if [ -z "$tof" ]; then
       anything=1
       if [ $noaction ]; then
           echo $RN_RM_CMD "$(shescape "$frm")"
       else
           $RN_RM_CMD "$frm"
       fi
   else
       if [ x"$frm" != x"$tof" ]; then
           anything=1
           if [ $noaction ]; then
               echo $RN_CMD "$(shescape "$frm")" "$(shescape "$tof")"
           else
               $RN_CMD "$frm" "$tof"
           fi
       fi
   fi
#echo "D: anything0: $anything"
done < "$tmp1"

#echo "D: anything: $anything" 1>&2
[ ! $anything ] && { echo "I: Nothing changed" 1>&2; break; }

[ $dowait ] && [ $step -eq 1 ] && { printf "%s" ""; read xxx; }

done
## Cleanup
rm "$tmp1" "$tmp2"
